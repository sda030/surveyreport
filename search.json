[{"path":[]},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement stephus.daus@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://sda030.github.io/surveyreport/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://sda030.github.io/surveyreport/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 surveyreport authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sda030.github.io/surveyreport/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephan Daus. Author, maintainer.","code":""},{"path":"https://sda030.github.io/surveyreport/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Daus S (2022). surveyreport: Automatic Reports Office Format Based Tidy Specifications. https://github.com/sda030/surveyreport, https://sda030.github.io/surveyreport/.","code":"@Manual{,   title = {surveyreport: Automatic Reports in Office Format Based on Tidy Specifications},   author = {Stephan Daus},   year = {2022},   note = {https://github.com/sda030/surveyreport, https://sda030.github.io/surveyreport/}, }"},{"path":"https://sda030.github.io/surveyreport/index.html","id":"surveyreport-automatic-reports-in-office-format-based-on-tidy-specifications","dir":"","previous_headings":"","what":"Automatic Reports in Office Format Based on Tidy Specifications","title":"Automatic Reports in Office Format Based on Tidy Specifications","text":"Produces highly customizable figures, text, analyses reports batch possible dpendent-independent relations possible interest.","code":""},{"path":"https://sda030.github.io/surveyreport/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automatic Reports in Office Format Based on Tidy Specifications","text":"development version GitHub :","code":"install.packages(\"devtools\") devtools::install_github(\"sda030/surveyreport\")"},{"path":"https://sda030.github.io/surveyreport/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Automatic Reports in Office Format Based on Tidy Specifications","text":"Please see documentation []","code":""},{"path":"https://sda030.github.io/surveyreport/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Automatic Reports in Office Format Based on Tidy Specifications","text":"Please note surveyreport project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/center_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Center String Vector — center_string","title":"Center String Vector — center_string","text":"Center String Vector","code":""},{"path":"https://sda030.github.io/surveyreport/reference/center_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center String Vector — center_string","text":"","code":"center_string(string, maxwidth = 50)"},{"path":"https://sda030.github.io/surveyreport/reference/center_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center String Vector — center_string","text":"string String vector maxwidth Maximum width","code":""},{"path":"https://sda030.github.io/surveyreport/reference/center_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center String Vector — center_string","text":"String vector","code":""},{"path":"https://sda030.github.io/surveyreport/reference/center_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center String Vector — center_string","text":"","code":"center_string(string=c(\"This is a very long label for a graph.\", \"But this one is even longer due to superfluous and verbose way of writing\"),  maxwidth=20) #> [1] \"This is a very long\\nlabel for a graph.\"                                      #> [2] \"But this one is\\neven longer due to\\nsuperfluous and verbose\\nway of writing\""},{"path":"https://sda030.github.io/surveyreport/reference/col_to_binaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate a (factor, character, integer, etc) column into multiple columns, — col_to_binaries","title":"Mutate a (factor, character, integer, etc) column into multiple columns, — col_to_binaries","text":"Easily mutate single column multiple columns (~dummies+1), retaining variable labels order original factor variable.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/col_to_binaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate a (factor, character, integer, etc) column into multiple columns, — col_to_binaries","text":"","code":"col_to_binaries(data, col, var_separator = \"___\", label_separator = \" - \")"},{"path":"https://sda030.github.io/surveyreport/reference/col_to_binaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate a (factor, character, integer, etc) column into multiple columns, — col_to_binaries","text":"data Data frame tibble col Single column. Tidy-select. var_separator [character(1)>0] Separator old variable name categories. label_separator [character(1)>0] Separator old label name new label part.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/col_to_binaries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate a (factor, character, integer, etc) column into multiple columns, — col_to_binaries","text":"Original data frame binary columns attached, containing new labels.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/col_to_binaries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate a (factor, character, integer, etc) column into multiple columns, — col_to_binaries","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union library(officer) ex_survey1 %>%   col_to_binaries(col = b_3, label_separator = \"  -  \") %>%   report_chart_likert(cols = matches(\"b_3_\"), what = \"freq\") #> rdocx document with 2 element(s) #>  #> * styles: #>                 Normal              heading 1              heading 2  #>            \"paragraph\"            \"paragraph\"            \"paragraph\"  #>              heading 3 Default Paragraph Font           Normal Table  #>            \"paragraph\"            \"character\"                \"table\"  #>                No List                 strong               centered  #>            \"numbering\"            \"character\"            \"paragraph\"  #>         table_template    Light List Accent 2            Titre 1 Car  #>                \"table\"                \"table\"            \"character\"  #>            Titre 2 Car            Titre 3 Car          Image Caption  #>            \"character\"            \"character\"            \"paragraph\"  #>          Table Caption     Table Professional                  toc 1  #>            \"paragraph\"                \"table\"            \"paragraph\"  #>                  toc 2           Balloon Text    Texte de bulles Car  #>            \"paragraph\"            \"paragraph\"            \"character\"  #>           reference_id          graphic title            table title  #>            \"character\"            \"paragraph\"            \"paragraph\"  #>  #> * Content at cursor location: #>   level num_id text style_name content_type #> 1    NA     NA          Normal    paragraph"},{"path":"https://sda030.github.io/surveyreport/reference/colour_picker.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Colour Palette — colour_picker","title":"Get Colour Palette — colour_picker","text":"Give two","code":""},{"path":"https://sda030.github.io/surveyreport/reference/colour_picker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Colour Palette — colour_picker","text":"","code":"colour_picker(   type,   unique_set_group,   unique_set,   colour_set_ordinal,   colour_set_nominal )"},{"path":"https://sda030.github.io/surveyreport/reference/colour_picker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Colour Palette — colour_picker","text":"type Character vector variable types (\"ordinal\", \"nominal\", \"interval\"). unique_set_group Character vector unique values across battery. unique_set Character vector unique values within variable. colour_set_ordinal, colour_set_nominal Character vector hex colours. Must provided.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/colour_picker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Colour Palette — colour_picker","text":"Named character vector hex colours element unique_set.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/combn_upto.html","id":null,"dir":"Reference","previous_headings":"","what":"Create All Possible Combinations of Vector Elements with Minimum A and\nMaximum B. — combn_upto","title":"Create All Possible Combinations of Vector Elements with Minimum A and\nMaximum B. — combn_upto","text":"Create Possible Combinations Vector Elements Minimum Maximum B.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/combn_upto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create All Possible Combinations of Vector Elements with Minimum A and\nMaximum B. — combn_upto","text":"","code":"combn_upto(   vec = c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"),   n_min = 6L,   n_max = length(vec) )"},{"path":"https://sda030.github.io/surveyreport/reference/combn_upto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create All Possible Combinations of Vector Elements with Minimum A and\nMaximum B. — combn_upto","text":"vec Vector n_min Minimum number elements n_max Maximum number elements. Defaults length vec.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/combn_upto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create All Possible Combinations of Vector Elements with Minimum A and\nMaximum B. — combn_upto","text":"data frame","code":""},{"path":"https://sda030.github.io/surveyreport/reference/combn_upto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create All Possible Combinations of Vector Elements with Minimum A and\nMaximum B. — combn_upto","text":"","code":"combn_upto() #> $`c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\")` #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" #>  #> $`c(\"b\", \"c\", \"d\", \"e\", \"f\", \"g\")` #> [1] \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" #>  #> $`c(\"a\", \"c\", \"d\", \"e\", \"f\", \"g\")` #> [1] \"a\" \"c\" \"d\" \"e\" \"f\" \"g\" #>  #> $`c(\"a\", \"b\", \"d\", \"e\", \"f\", \"g\")` #> [1] \"a\" \"b\" \"d\" \"e\" \"f\" \"g\" #>  #> $`c(\"a\", \"b\", \"c\", \"e\", \"f\", \"g\")` #> [1] \"a\" \"b\" \"c\" \"e\" \"f\" \"g\" #>  #> $`c(\"a\", \"b\", \"c\", \"d\", \"f\", \"g\")` #> [1] \"a\" \"b\" \"c\" \"d\" \"f\" \"g\" #>  #> $`c(\"a\", \"b\", \"c\", \"d\", \"e\", \"g\")` #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"g\" #>  #> $`c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")` #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" #>"},{"path":"https://sda030.github.io/surveyreport/reference/create_chart_likert.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Likert Chart from Descriptives Data Frame — create_chart_likert","title":"Create Likert Chart from Descriptives Data Frame — create_chart_likert","text":"Create Likert Chart Descriptives Data Frame","code":""},{"path":"https://sda030.github.io/surveyreport/reference/create_chart_likert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Likert Chart from Descriptives Data Frame — create_chart_likert","text":"","code":"create_chart_likert(   data,   y = \"value\",   x = \"label\",   group = \"variable\",   labels = \"data_label\",   label_font_size = 10,   main_font_size = 8,   font_family = \"Calibri\",   colour_palette = NULL,   colour_na = \"gray90\",   colour_2nd_binary_cat = \"#ffffff\",   vertical = FALSE,   what = \"percent\",   seed = 1 )"},{"path":"https://sda030.github.io/surveyreport/reference/create_chart_likert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Likert Chart from Descriptives Data Frame — create_chart_likert","text":"data Data frame tibble. y [character(1)] Name column data . x [character(1)] Name column data group [character(1)] Name column data labels [character(1)] Name column data labels. label_font_size [integer(1)] Font size data labels main_font_size [integer(1)] Font size text Must contain least number unique values (excl. missing) data set. font_family Word font family. See officer::fp_text colour_palette [character()] Must contain least number unique values (incl. missing) data set. colour_na [character(1)] Colour single string. colour_2nd_binary_cat [character(1)] Colour second category binary variables. Often useful hide . vertical Logical. FALSE (default), horizontal. [character(1)] Either \"percent\" \"frequency\". Supports partial matching. seed Optional random seed selection colours blender.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/create_chart_likert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Likert Chart from Descriptives Data Frame — create_chart_likert","text":"mschart-object. Can added rdocx, rpptx rxlsx object.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/create_chart_likert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Likert Chart from Descriptives Data Frame — create_chart_likert","text":"","code":"#create_chart_likert(prepare_data_for_mschart(ex_survey1[paste0(\"b_\", 1:3)]))"},{"path":"https://sda030.github.io/surveyreport/reference/crosstable_to_apa.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — crosstable_to_apa","title":"Title — crosstable_to_apa","text":"Title","code":""},{"path":"https://sda030.github.io/surveyreport/reference/crosstable_to_apa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — crosstable_to_apa","text":"","code":"crosstable_to_apa(   x,   label_separator = NULL,   docx_template = NULL,   caption_style = NULL,   body_style = NULL,   table_header_style = NULL,   footer_style = NULL,   caption_autonum = NULL,   topcaption = TRUE,   return_docx = TRUE )"},{"path":"https://sda030.github.io/surveyreport/reference/crosstable_to_apa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — crosstable_to_apa","text":"x Crosstable label_separator [character(1)] NULL (default), split labels main- sub-questions create figure caption. docx_template [character(1) || officer::read_docx()] caption_style [character(1)] Word template style used formatting chart. Defaults \"Normal\". body_style [character(1)] Word style table body cells. table_header_style [character(1)] Word style table header cells. footer_style [character(1)] Word style table footer. caption_autonum Object obtained run_autonum. topcaption [logical(1)] Place caption (TRUE, default) table. return_docx [logical(1)] FALSE, return table rather rdocx object table inside . Set TRUE (default) piping multiple tables charts together. Set FALSE want continue modify table.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/crosstable_to_apa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — crosstable_to_apa","text":"rdocx object, can saved print() loading officer-package","code":""},{"path":"https://sda030.github.io/surveyreport/reference/crosstable_to_apa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — crosstable_to_apa","text":"","code":"library(crosstable) library(dplyr) library(officer) crosstable::crosstable(ex_survey1, b_1:b_3, percent_pattern = \"{p_col}\") %>%   crosstable_to_apa(label_separator=\" - \") #> rdocx document with 4 element(s) #>  #> * styles: #>                 Normal              heading 1              heading 2  #>            \"paragraph\"            \"paragraph\"            \"paragraph\"  #>              heading 3 Default Paragraph Font           Normal Table  #>            \"paragraph\"            \"character\"                \"table\"  #>                No List                 strong               centered  #>            \"numbering\"            \"character\"            \"paragraph\"  #>         table_template    Light List Accent 2            Titre 1 Car  #>                \"table\"                \"table\"            \"character\"  #>            Titre 2 Car            Titre 3 Car          Image Caption  #>            \"character\"            \"character\"            \"paragraph\"  #>          Table Caption     Table Professional                  toc 1  #>            \"paragraph\"                \"table\"            \"paragraph\"  #>                  toc 2           Balloon Text    Texte de bulles Car  #>            \"paragraph\"            \"paragraph\"            \"character\"  #>           reference_id          graphic title            table title  #>            \"character\"            \"paragraph\"            \"paragraph\"  #>  #> * Content at cursor location: #>   level num_id     text style_name content_type #> 1    NA     NA Note. N=     Normal    paragraph"},{"path":"https://sda030.github.io/surveyreport/reference/ex_survey1.html","id":null,"dir":"Reference","previous_headings":"","what":"ex_survey1: Mockup dataset of a survey. — ex_survey1","title":"ex_survey1: Mockup dataset of a survey. — ex_survey1","text":"dataset containing fake respondents' answers survey questions. first two, x_sex x_human, intended independent variables, whereas remaining dependent. underscore _ variable names separates item groups (prefix) items (suffix) (.e. a_1-a_9 => + 1-9),  whereas ' - ' separates labels.  latter corresponds default SurveyXact.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/ex_survey1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ex_survey1: Mockup dataset of a survey. — ex_survey1","text":"","code":"ex_survey1"},{"path":"https://sda030.github.io/surveyreport/reference/ex_survey1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ex_survey1: Mockup dataset of a survey. — ex_survey1","text":"data frame 100 rows 29 variables: x1_sex Gender x2_human respondent human? a_1 consent following? - Agreement #1 a_2 consent following? - Agreement #2 a_3 consent following? - Agreement #3 a_4 consent following? - Agreement #4 a_5 consent following? - Agreement #5 a_6 consent following? - Agreement #6 a_7 consent following? - Agreement #7 a_8 consent following? - Agreement #8 a_9 consent following? - Agreement #9 b_1 much like living - Beijing b_2 much like living - Brussels b_3 much like living - Budapest c_1 many years experience - Company c_2 many years experience - Company B d_1 Rate degree confidence following - Driving d_2 Rate degree confidence following - Drinking d_3 Rate degree confidence following - Driving d_4 Rate degree confidence following - Dancing e_1 often following? - Eat e_2 often following? - Eavesdrop e_3 often following? - Exercise e_4 often following? - Encourage someone recently met struggles simple tasks achieve p_1 extent agree disagree   following policies - Red Party p_2 extent agree disagree   following policies - Green Party p_3 extent agree disagree   following policies - Yellow Party p_4 extent agree disagree   following policies - Blue Party f_uni following universities   prefer study ? resp_status Response status","code":""},{"path":[]},{"path":"https://sda030.github.io/surveyreport/reference/get_colour_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide A Colour Set for A Number of Requested Colours — get_colour_set","title":"Provide A Colour Set for A Number of Requested Colours — get_colour_set","text":"Possibly using user_colour_set available. sufficient, uses set     palette RColorBrewer.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/get_colour_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide A Colour Set for A Number of Requested Colours — get_colour_set","text":"","code":"get_colour_set(   n_colours_needed,   user_colour_set = NULL,   seed = 1,   call = rlang::caller_env() )"},{"path":"https://sda030.github.io/surveyreport/reference/get_colour_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide A Colour Set for A Number of Requested Colours — get_colour_set","text":"n_colours_needed Number colours needed. user_colour_set User-supplied default palette. seed Random seed sampling. call Caller function used inside another function.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/get_colour_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide A Colour Set for A Number of Requested Colours — get_colour_set","text":"colour set character vector.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/get_colour_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide A Colour Set for A Number of Requested Colours — get_colour_set","text":"","code":"get_colour_set(n_colours_needed=4) #> [1] \"#CAB2D6\" \"#33A02C\" \"#FDBF6F\" \"#A6CEE3\""},{"path":"https://sda030.github.io/surveyreport/reference/handpick.html","id":null,"dir":"Reference","previous_headings":"","what":"Return character vector of manually picked data columns. — handpick","title":"Return character vector of manually picked data columns. — handpick","text":"Return character vector manually picked data columns.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/handpick.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return character vector of manually picked data columns. — handpick","text":"","code":"handpick(data, to_clipboard = FALSE)"},{"path":"https://sda030.github.io/surveyreport/reference/handpick.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return character vector of manually picked data columns. — handpick","text":"data dataset; tibble data frame. to_clipboard Boolean. Defaults FALSE. TRUE, overwrites already copied. Use caution.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/handpick.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return character vector of manually picked data columns. — handpick","text":"Character vector. Prints console.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/handpick.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return character vector of manually picked data columns. — handpick","text":"","code":"if(interactive()) handpick(mtcars)"},{"path":"https://sda030.github.io/surveyreport/reference/hex_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Suitable Font Given Background Hex Colour — hex_bw","title":"Identify Suitable Font Given Background Hex Colour — hex_bw","text":"Code taken XXX.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/hex_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Suitable Font Given Background Hex Colour — hex_bw","text":"","code":"hex_bw(hex_code)"},{"path":"https://sda030.github.io/surveyreport/reference/hex_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Suitable Font Given Background Hex Colour — hex_bw","text":"hex_code Colour hex-format.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/hex_bw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify Suitable Font Given Background Hex Colour — hex_bw","text":"Colours hex-format, either black white.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/hex_bw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Suitable Font Given Background Hex Colour — hex_bw","text":"","code":"hex_bw(\"#0dadfd\") #> [1] \"#000000\""},{"path":"https://sda030.github.io/surveyreport/reference/is_colour.html","id":null,"dir":"Reference","previous_headings":"","what":"Are All Colours in Vector Valid Colours — is_colour","title":"Are All Colours in Vector Valid Colours — is_colour","text":"title says. : http://stackoverflow.com//13290832/3315962","code":""},{"path":"https://sda030.github.io/surveyreport/reference/is_colour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are All Colours in Vector Valid Colours — is_colour","text":"","code":"is_colour(x)"},{"path":"https://sda030.github.io/surveyreport/reference/is_colour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are All Colours in Vector Valid Colours — is_colour","text":"x Character vector colours hex-format.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/is_colour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are All Colours in Vector Valid Colours — is_colour","text":"Logical, error.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/is_colour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are All Colours in Vector Valid Colours — is_colour","text":"","code":"is_colour(c(\"#ff00ff\", \"#010101\")) #> #ff00ff #010101  #>    TRUE    TRUE"},{"path":"https://sda030.github.io/surveyreport/reference/lavaan_mi.html","id":null,"dir":"Reference","previous_headings":"","what":"Simply Run Measurement Invariance Model in lavaan — lavaan_mi","title":"Simply Run Measurement Invariance Model in lavaan — lavaan_mi","text":"Simply Run Measurement Invariance Model lavaan","code":""},{"path":"https://sda030.github.io/surveyreport/reference/lavaan_mi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simply Run Measurement Invariance Model in lavaan — lavaan_mi","text":"","code":"lavaan_mi(data, cols, group, ...)"},{"path":"https://sda030.github.io/surveyreport/reference/lavaan_mi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simply Run Measurement Invariance Model in lavaan — lavaan_mi","text":"data data.frame tibble. cols Columns character vector group Grouping variable string ... use","code":""},{"path":"https://sda030.github.io/surveyreport/reference/lavaan_mi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simply Run Measurement Invariance Model in lavaan — lavaan_mi","text":"tibble.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/omitted_recoder_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Missing By Type of Missingness — omitted_recoder_df","title":"Recode Missing By Type of Missingness — omitted_recoder_df","text":"Useful item difficulty estimation according Mislevy's recommendation.     Also allowing escaping rows missingess (typically     administered).","code":""},{"path":"https://sda030.github.io/surveyreport/reference/omitted_recoder_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Missing By Type of Missingness — omitted_recoder_df","text":"","code":"omitted_recoder_df(   df,   accept_vector = FALSE,   skipped = 0L,   not_administered = NA_integer_,   all_missing = NA_integer_ )"},{"path":"https://sda030.github.io/surveyreport/reference/omitted_recoder_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Missing By Type of Missingness — omitted_recoder_df","text":"df Data frame, vector. Must dataframe, matrix, function. include item variables. accept_vector Handles vectors accept_vector=TRUE. Set false avoid accidents using function per block just one item block. skipped replace skipped values not_administered replace administered values . all_missing replace values rows missing .","code":""},{"path":"https://sda030.github.io/surveyreport/reference/omitted_recoder_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Missing By Type of Missingness — omitted_recoder_df","text":"data.frame (vector, input vector accept_vector=TRUE)   recoded cells.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/omitted_recoder_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Missing By Type of Missingness — omitted_recoder_df","text":"","code":"# Original data input <- setNames(as.data.frame(matrix(c(   1,0,1,0,1, # All present   NA,0,1,0,1, # First missing   NA,NA,1,0,1, # First two missing   1,0,NA,0,1, # One in middle missing   1,NA,NA,NA,1, # All in the middle missing   1,0,1,0,NA, # Last one missing   1,0,1,NA,NA, # Last two missing   1,0,NA,NA,NA, # Last three missing   NA,NA,NA,NA,NA # All missing ), nrow = 9, byrow = TRUE)), nm=paste0(\"X\", 1:5)) # What should be the output for item estimation according to Mislevy # Skipped=> 0, not_administered=>NA, all_missing=>NA y_i <-  stats::setNames(as.data.frame(matrix(c(   1,0,1,0,1, # All present   0,0,1,0,1, # First missing   0,0,1,0,1, # First two missing   1,0,0,0,1, # One in middle missing   1,0,0,0,1, # All in the middle missing   1,0,1,0,0, # Last one missing   1,0,1,0,NA, # Last two missing   1,0,0,NA,NA, # Last three missing   NA,NA,NA,NA,NA # All missing ), nrow = 9, byrow = TRUE)), nm=paste0(\"X\", 1:5))  # What should be the output for person estimation according to Mislevy # Skipped=> 0, not_administered=>NA, all_missing=>NA y_p <- stats::setNames(as.data.frame(matrix(c(   1,0,1,0,1, # All present   0,0,1,0,1, # First missing   0,0,1,0,1, # First two missing   1,0,0,0,1, # One in middle missing   1,0,0,0,1, # All in the middle missing   1,0,1,0,0, # Last one missing   1,0,1,0,0, # Last two missing   1,0,0,0,0, # Last three missing   0,0,0,0,0 # All missing ), nrow = 9, byrow = TRUE)), nm=paste0(\"X\", 1:5)) # Recoding for counting skipped, not_administered, all_missing, etc # Skipped=> 99, not_administered=>999, all_missing=>9999 y_info <- stats::setNames(as.data.frame(matrix(c(   1,0,1,0,1, # All present   99,0,1,0,1, # First missing   99,99,1,0,1, # First two missing   1,0,99,0,1, # One in middle missing   1,99,99,99,1, # All in the middle missing   1,0,1,0,99, # Last one missing   1,0,1,99,999, # Last two missing   1,0,99,999,999, # Last three missing   9999,9999,9999,9999,9999 # All missing ), nrow = 9, byrow = TRUE)), nm=paste0(\"X\", 1:5))  y_i2 <- omitted_recoder_df(input) #Mislevy item estimation y_p2 <- omitted_recoder_df(input, skipped = 0L, #Mislevy person estimation                            not_administered = 0L, all_missing = 0L) y_info2 <- omitted_recoder_df(input, skipped = 99,                               not_administered = 999, all_missing = 9999) identical(y_i, y_i2) #> [1] TRUE identical(y_p, y_p2) #> [1] TRUE identical(y_info, y_info2) #> [1] TRUE if (FALSE) { omitted_recoder_df(input[,4]) # Should fail } identical(omitted_recoder_df(input[,4], accept_vector=TRUE),          c(0,0,0,0,0,0,0,NA,NA)) #> [1] TRUE identical(omitted_recoder_df(input[,4, drop=FALSE]),           input[,4, drop=FALSE]) # Output should equal input #> Warning: Unable to recode single-column data.frame without knowing context. #> [1] TRUE"},{"path":"https://sda030.github.io/surveyreport/reference/prepare_mschart_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function to Prepare Data for create_chart_likert — prepare_mschart_data","title":"Helper Function to Prepare Data for create_chart_likert — prepare_mschart_data","text":"Helper Function Prepare Data create_chart_likert","code":""},{"path":"https://sda030.github.io/surveyreport/reference/prepare_mschart_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function to Prepare Data for create_chart_likert — prepare_mschart_data","text":"","code":"prepare_mschart_data(   data,   cols = tidyselect::everything(),   by = NULL,   what = \"percent\",   showNA = \"ifany\",   call = rlang::caller_env(),   digits = 1,   percent_sign = TRUE,   sort_by = NULL,   desc = FALSE,   hide_label_if_below = 1,   label_separator = NULL )"},{"path":"https://sda030.github.io/surveyreport/reference/prepare_mschart_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function to Prepare Data for create_chart_likert — prepare_mschart_data","text":"data Dataset cols Columns select reporting. Supports tidy-select. data-masking. Optional column used break graph . [character(1)] Whether compute \"percentage\" (default) \"frequency\". Supports partial matching. showNA [logical(1)] Whether show NA categorical variables (one c(\"ifany\", \"always\", \"\"), like table()). call Error call function, usually needed. digits [integer(1)] Number decimal places integer. percent_sign [logical(1)] Whether include percentage symbol chart. sort_by [character(1)], sort output \"label\", size category, sum categories (character vector). Defaults none (NULL). desc [logical(1)] Reverse sorting sort_by. Defaults ascending order (FALSE). hide_label_if_below [numeric(1)] Whether hide label value. label_separator [character(1)] Split pattern.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/prepare_mschart_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function to Prepare Data for create_chart_likert — prepare_mschart_data","text":"Dataset","code":""},{"path":"https://sda030.github.io/surveyreport/reference/remove_special_chars_in_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Special Characters (<,>) in Variable Labels — remove_special_chars_in_labels","title":"Remove Special Characters (<,>) in Variable Labels — remove_special_chars_in_labels","text":"Remove Special Characters (<,>) Variable Labels","code":""},{"path":"https://sda030.github.io/surveyreport/reference/remove_special_chars_in_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Special Characters (<,>) in Variable Labels — remove_special_chars_in_labels","text":"","code":"remove_special_chars_in_labels(df)"},{"path":"https://sda030.github.io/surveyreport/reference/remove_special_chars_in_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Special Characters (<,>) in Variable Labels — remove_special_chars_in_labels","text":"df Data frame","code":""},{"path":"https://sda030.github.io/surveyreport/reference/remove_special_chars_in_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Special Characters (<,>) in Variable Labels — remove_special_chars_in_labels","text":"data frame","code":""},{"path":"https://sda030.github.io/surveyreport/reference/rename_by_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Dataset Columns by Labels. — rename_by_labels","title":"Rename Dataset Columns by Labels. — rename_by_labels","text":"Occasionally dataframe columns named logically consistent software data originates. function renames variable names based patterns variable labels, ignoring stop words.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/rename_by_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Dataset Columns by Labels. — rename_by_labels","text":"","code":"rename_by_labels(   data,   label_sep = \" - \",   sort_var = c(\"pos\", \"variable\", \"label\"),   new_var_sep = \"_\",   stop_words = unique(c(stopwords[[\"en\"]], \"where\", \"is\", \"do\", \"which\", \"how\", \"to\")) )"},{"path":"https://sda030.github.io/surveyreport/reference/rename_by_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Dataset Columns by Labels. — rename_by_labels","text":"data Dataset. label_sep separator group part unique part label. sort_var numbering variables within group, sort ? pos original position dataset, new_var_sep creating new variables, glue together variable group name prefix numbering? stop_words Words ignore label abbreviating label name.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/rename_by_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Dataset Columns by Labels. — rename_by_labels","text":"Data renamed variable names.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/rename_by_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Dataset Columns by Labels. — rename_by_labels","text":"","code":"rename_by_labels(ex_survey1) #> # A tibble: 100 × 30 #>    gn    rh    cn_1  cn_2  cn_3  cn_4  cn_5  cn_6  cn_7  cn_8  cn_9  lv_1  lv_2  #>    <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct> <fct> #>  1 Males Robo… Yes   No    No    No    Yes   NA    No    No    Yes   Not … A bit #>  2 Fema… Robo… No    No    No    NA    No    Yes   No    NA    Yes   Not … A bit #>  3 Males Defi… Yes   Yes   No    Yes   Yes   Yes   Yes   Yes   Yes   A lot Not … #>  4 Fema… Defi… Yes   Yes   No    Yes   Yes   Yes   Yes   Yes   No    Not … Not … #>  5 Males Robo… No    Yes   No    Yes   No    Yes   No    No    Yes   Not … Not … #>  6 Males Defi… Yes   No    No    Yes   NA    Yes   No    Yes   Yes   Not … A bit #>  7 Fema… Defi… No    No    No    NA    Yes   Yes   Yes   Yes   No    Not … A bit #>  8 Fema… Robo… Yes   No    Yes   Yes   Yes   No    No    No    Yes   A lot Not … #>  9 Fema… Robo… NA    No    No    NA    Yes   Yes   Yes   Yes   No    Not … A bit #> 10 Males Defi… No    Yes   Yes   NA    Yes   NA    No    Yes   Yes   A bit A bit #> # … with 90 more rows, and 17 more variables: lv_3 <fct>, ex_1 <dbl>, #> #   ex_2 <dbl>, rdc_1 <fct>, rdc_2 <fct>, rdc_3 <fct>, rdc_4 <fct>, #> #   hodydtf_1 <fct>, hodydtf_2 <fct>, hodydtf_3 <fct>, hodydtf_4 <fct>, #> #   eadp_1 <fct>, eadp_2 <fct>, eadp_3 <fct>, eadp_4 <fct>, ups <chr>, #> #   rs12u3r4c5e6 <int>"},{"path":"https://sda030.github.io/surveyreport/reference/report_chart_likert.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Word Report with Univariates for Categorical Columns Sharing Same Categories — report_chart_likert","title":"Create Word Report with Univariates for Categorical Columns Sharing Same Categories — report_chart_likert","text":"Create Word Report Univariates Categorical Columns Sharing Categories","code":""},{"path":"https://sda030.github.io/surveyreport/reference/report_chart_likert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Word Report with Univariates for Categorical Columns Sharing Same Categories — report_chart_likert","text":"","code":"report_chart_likert(   data,   cols = everything(),   by = NULL,   showNA = \"ifany\",   docx_template = NULL,   label_font_size = 8,   main_font_size = 9,   font_family = \"Calibri\",   colour_palette = NULL,   colour_na = \"gray90\",   colour_2nd_binary_cat = \"#ffffff\",   height_per_col = 0.3,   height_fixed = 1,   chart_formatting = NULL,   caption_style = NULL,   what = \"percent\",   digits = 1,   percent_sign = TRUE,   sort_by = NULL,   vertical = FALSE,   desc = FALSE,   hide_label_if_below = 1,   label_separator = NULL,   caption_autonum = NULL,   seed = 1 )"},{"path":"https://sda030.github.io/surveyreport/reference/report_chart_likert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Word Report with Univariates for Categorical Columns Sharing Same Categories — report_chart_likert","text":"data Data frame tibble. cols Columns select reporting. Supports tidy-select. data-masking. Optional column used break graph . showNA [logical(1)>0] Whether show NA categorical variables (one c(\"ifany\", \"always\", \"\"), like table()). docx_template [character(1) || officer::read_docx()] Either filepath template file, rdocx-object read_docx. label_font_size [integer(1)] Font size data labels main_font_size [integer(1)] Font size text font_family [character(1)] Office font family. Defaults \"Arial\". See ?officer::fp_text() options. colour_palette [character()] Must contain least number unique values (incl. missing) data set. colour_na [character(1)] Colour single string, NA-values. colour_2nd_binary_cat [character(1)] Colour second category binary variables. Often useful hide . height_per_col [numeric(1)>0] Height cm per chart entry. height_fixed [numeric(1)>0] Fixed height cm. chart_formatting [character(1)] Template style used formatting chart caption_style [character(1)] Template style used formatting chart. Defaults \"Normal\". [character(1)] Either \"percent\" \"frequency\". Supports partial matching. digits [integer(1)] Number decimal places integer. percent_sign [logical(1)>0] Whether include percentage symbol chart. sort_by [character(1)], sort output \"label\", size category, sum categories (character vector). Defaults none (NULL). vertical [logical(1)>0] FALSE (default), horizontal. desc [logical(1)>0] Sort descending order? hide_label_if_below [numeric(1)] Whether hide label value. label_separator [character(1)] NULL (default), split labels main- sub-questions create figure caption. caption_autonum Object obtained run_autonum. seed [numeric(1)>0] Optional random seed selection colours blender.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/report_chart_likert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Word Report with Univariates for Categorical Columns Sharing Same Categories — report_chart_likert","text":"rdocx object, can saved print() loading officer-package","code":""},{"path":"https://sda030.github.io/surveyreport/reference/report_chart_likert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Word Report with Univariates for Categorical Columns Sharing Same Categories — report_chart_likert","text":"","code":"library(dplyr) # For piping library(officer) # To save the rdocx object to disk ex_survey1 %>%   report_chart_likert(cols = a_1:a_9) #%>% #> rdocx document with 2 element(s) #>  #> * styles: #>                 Normal              heading 1              heading 2  #>            \"paragraph\"            \"paragraph\"            \"paragraph\"  #>              heading 3 Default Paragraph Font           Normal Table  #>            \"paragraph\"            \"character\"                \"table\"  #>                No List                 strong               centered  #>            \"numbering\"            \"character\"            \"paragraph\"  #>         table_template    Light List Accent 2            Titre 1 Car  #>                \"table\"                \"table\"            \"character\"  #>            Titre 2 Car            Titre 3 Car          Image Caption  #>            \"character\"            \"character\"            \"paragraph\"  #>          Table Caption     Table Professional                  toc 1  #>            \"paragraph\"                \"table\"            \"paragraph\"  #>                  toc 2           Balloon Text    Texte de bulles Car  #>            \"paragraph\"            \"paragraph\"            \"character\"  #>           reference_id          graphic title            table title  #>            \"character\"            \"paragraph\"            \"paragraph\"  #>  #> * Content at cursor location: #>   level num_id text style_name content_type #> 1    NA     NA          Normal    paragraph  # print(target = \"test_docx_a19.docx\") #file.remove(\"test_docx_a19.docx\")     docx_template <-       system.file(\"template\",\"NIFUmal_tom.docx\",                    package = \"surveyreport\", mustWork = TRUE)   colour_palette <-     readxl::read_excel(system.file(\"template\", \"NIFUmal_stiler.xlsx\",                                    package = \"surveyreport\", mustWork = TRUE),                        sheet = \"NIFUblue\") %>%     dplyr::pull(hex) chart_format <-  system.file(\"template\", \"NIFUmal_stiler.xlsx\",              package = \"surveyreport\", mustWork = TRUE) %>%  readxl::read_excel(., sheet = 1) %>%  dplyr::filter(surveyreport_style == \"figure\") %>%  dplyr::pull(template_style)   test_docx_b13 <-    ex_survey1 %>%    report_chart_likert(cols = b_1:b_3,                        docx_template = docx_template,                        colour_palette = colour_palette,                        chart_formatting = chart_format,                        height_per_col = .3,                        height_fixed = 1) #print(test_docx_b13, target = \"test_docx_b13.docx\") #file.remove(\"test_docx_b13.docx\")"},{"path":"https://sda030.github.io/surveyreport/reference/stopwords.html","id":null,"dir":"Reference","previous_headings":"","what":"stopwords — stopwords","title":"stopwords — stopwords","text":"stopwords","code":""},{"path":"https://sda030.github.io/surveyreport/reference/stopwords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stopwords — stopwords","text":"","code":"stopwords"},{"path":"https://sda030.github.io/surveyreport/reference/stopwords.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"stopwords — stopwords","text":"stopwords","code":""},{"path":"https://sda030.github.io/surveyreport/reference/subset_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Given Ordered Integer Vector, Return Requested Set. — subset_vector","title":"Given Ordered Integer Vector, Return Requested Set. — subset_vector","text":"Useful identifying categories collected.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/subset_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given Ordered Integer Vector, Return Requested Set. — subset_vector","text":"","code":"subset_vector(   vec,   set = c(\"top\", \"upper\", \"mid_upper\", \"lower\", \"mid_lower\", \"bottom\", \"maximize\"),   maximize_n = NULL )"},{"path":"https://sda030.github.io/surveyreport/reference/subset_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given Ordered Integer Vector, Return Requested Set. — subset_vector","text":"vec vector type. set character string, one c(\"top\", \"upper\", \"mid_upper\", \"lower\", \"mid_lower\", \"bottom\") maximize_n number values extract set \"maximize\".","code":""},{"path":"https://sda030.github.io/surveyreport/reference/subset_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Given Ordered Integer Vector, Return Requested Set. — subset_vector","text":"Selected set vector.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/subset_vector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Given Ordered Integer Vector, Return Requested Set. — subset_vector","text":"","code":"subset_vector(vec=1:7, set=\"mid_lower\") #> [1] 1 2 3 4"},{"path":"https://sda030.github.io/surveyreport/reference/swap_label_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Swap Dataset Columns and Labels — swap_label_colnames","title":"Swap Dataset Columns and Labels — swap_label_colnames","text":"Columns containing labels remain unaffected, warning given.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/swap_label_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Swap Dataset Columns and Labels — swap_label_colnames","text":"","code":"swap_label_colnames(data)"},{"path":"https://sda030.github.io/surveyreport/reference/swap_label_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Swap Dataset Columns and Labels — swap_label_colnames","text":"data Data frame tibble.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/swap_label_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Swap Dataset Columns and Labels — swap_label_colnames","text":"Data.frame/tibble.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/swap_label_colnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Swap Dataset Columns and Labels — swap_label_colnames","text":"","code":"swap_label_colnames(mtcars) #> Warning: ℹ Missing labels for columns: `mpg`, `cyl`, `disp`, `hp`, `drat`, `wt`, `qsec`, #>   `vs`, `am`, `gear`, and `carb`. #> ℹ Leaving column names untouched for these. #>     mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> 1  21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> 2  21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> 3  22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> 4  21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> 5  18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> 6  18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> 7  14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> 8  24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> 9  22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> 10 19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4 #> 11 17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4 #> 12 16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3 #> 13 17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3 #> 14 15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3 #> 15 10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4 #> 16 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4 #> 17 14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4 #> 18 32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1 #> 19 30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2 #> 20 33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1 #> 21 21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1 #> 22 15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2 #> 23 15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2 #> 24 13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4 #> 25 19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2 #> 26 27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1 #> 27 26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2 #> 28 30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2 #> 29 15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4 #> 30 19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6 #> 31 15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8 #> 32 21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulate categorical variables with proportions — tab_cat_prop","title":"Tabulate categorical variables with proportions — tab_cat_prop","text":"Tabulate categorical variables proportions","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulate categorical variables with proportions — tab_cat_prop","text":"","code":"tab_cat_prop(   data,   yvars = NULL,   xvars = NULL,   var_labels = 2,   val_labels = FALSE,   prop = TRUE,   prefix = \"v\",   na.rm.yvar = FALSE,   na.rm.xvar = FALSE )"},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulate categorical variables with proportions — tab_cat_prop","text":"data data.frame variables want included. yvars Dependent variable, string. xvars Optional independent variable, string. var_labels Integer, 0=variable name, 1=variable name - variable label, 2=variable label. val_labels Logical, whether use value labels column names output. prop Logical, whether compute proportions (default), n_observations. prefix Prefix frequency variables output. na.rm.yvar Remove missing dependent variable? Defaults false. na.rm.xvar Remove missing independent variable? Defaults false.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulate categorical variables with proportions — tab_cat_prop","text":"data.frame fixed columns","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulate categorical variables with proportions — tab_cat_prop","text":"","code":"tab_cat_prop(ex_survey1[,paste0(\"b_\", 1:3)]) #> # A tibble: 9 × 7 #>   yvar  yvar_group yvar_part yvar_cat      .n yvar_group_label           yvar_…¹ #>   <chr> <chr>      <chr>     <fct>      <dbl> <chr>                      <chr>   #> 1 b_1   b          1         Not at all  0.55 How much do you like livi… Bejing  #> 2 b_1   b          1         A bit       0.37 How much do you like livi… Bejing  #> 3 b_1   b          1         A lot       0.08 How much do you like livi… Bejing  #> 4 b_2   b          2         Not at all  0.4  How much do you like livi… Brusse… #> 5 b_2   b          2         A bit       0.48 How much do you like livi… Brusse… #> 6 b_2   b          2         A lot       0.12 How much do you like livi… Brusse… #> 7 b_3   b          3         Not at all  0.45 How much do you like livi… Budape… #> 8 b_3   b          3         A bit       0.42 How much do you like livi… Budape… #> 9 b_3   b          3         A lot       0.13 How much do you like livi… Budape… #> # … with abbreviated variable name ¹​yvar_part_label tab_cat_prop(ex_survey1, xvars = \"x1_sex\", yvars = paste0(\"b_\", 1:3)) #> Warning: Expected 2 pieces. Missing pieces filled with `NA` in 18 rows [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]. #> # A tibble: 18 × 11 #>    yvar  yvar_group yvar_…¹ xvar  yvar_…² xvar_…³     .n yvar_…⁴ yvar_…⁵ xvar_…⁶ #>    <chr> <chr>      <chr>   <chr> <fct>   <fct>    <dbl> <chr>   <chr>   <chr>   #>  1 b_1   b          1       x1_s… Not at… Males   0.538  How mu… Bejing  Gender  #>  2 b_1   b          1       x1_s… Not at… Females 0.562  How mu… Bejing  Gender  #>  3 b_1   b          1       x1_s… A bit   Males   0.404  How mu… Bejing  Gender  #>  4 b_1   b          1       x1_s… A bit   Females 0.333  How mu… Bejing  Gender  #>  5 b_1   b          1       x1_s… A lot   Males   0.0577 How mu… Bejing  Gender  #>  6 b_1   b          1       x1_s… A lot   Females 0.104  How mu… Bejing  Gender  #>  7 b_2   b          2       x1_s… Not at… Males   0.442  How mu… Brusse… Gender  #>  8 b_2   b          2       x1_s… Not at… Females 0.354  How mu… Brusse… Gender  #>  9 b_2   b          2       x1_s… A bit   Males   0.442  How mu… Brusse… Gender  #> 10 b_2   b          2       x1_s… A bit   Females 0.521  How mu… Brusse… Gender  #> 11 b_2   b          2       x1_s… A lot   Males   0.115  How mu… Brusse… Gender  #> 12 b_2   b          2       x1_s… A lot   Females 0.125  How mu… Brusse… Gender  #> 13 b_3   b          3       x1_s… Not at… Males   0.423  How mu… Budape… Gender  #> 14 b_3   b          3       x1_s… Not at… Females 0.479  How mu… Budape… Gender  #> 15 b_3   b          3       x1_s… A bit   Males   0.462  How mu… Budape… Gender  #> 16 b_3   b          3       x1_s… A bit   Females 0.375  How mu… Budape… Gender  #> 17 b_3   b          3       x1_s… A lot   Males   0.115  How mu… Budape… Gender  #> 18 b_3   b          3       x1_s… A lot   Females 0.146  How mu… Budape… Gender  #> # … with 1 more variable: xvar_label <chr>, and abbreviated variable names #> #   ¹​yvar_part, ²​yvar_cat, ³​xvar_cat, ⁴​yvar_group_label, ⁵​yvar_part_label, #> #   ⁶​xvar_group_label"},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop_to_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn tibble-result from tab_cat_prop into a prettier table — tab_cat_prop_to_table","title":"Turn tibble-result from tab_cat_prop into a prettier table — tab_cat_prop_to_table","text":"says.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop_to_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn tibble-result from tab_cat_prop into a prettier table — tab_cat_prop_to_table","text":"","code":"tab_cat_prop_to_table(data, prefix = \"\")"},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop_to_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn tibble-result from tab_cat_prop into a prettier table — tab_cat_prop_to_table","text":"data data.frame tab_cat_prop prefix string prefix column names","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop_to_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn tibble-result from tab_cat_prop into a prettier table — tab_cat_prop_to_table","text":"data.frame","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tab_cat_prop_to_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn tibble-result from tab_cat_prop into a prettier table — tab_cat_prop_to_table","text":"","code":"tab_cat_prop_to_table(tab_cat_prop(ex_survey1[,paste0(\"b_\", 1:3)])) #> # A tibble: 3 × 8 #>   yvar  yvar_group yvar_part yvar_group_label    yvar_…¹ Not a…² `A bit` `A lot` #>   <chr> <chr>      <chr>     <chr>               <chr>     <dbl>   <dbl>   <dbl> #> 1 b_1   b          1         How much do you li… Bejing     0.55    0.37    0.08 #> 2 b_2   b          2         How much do you li… Brusse…    0.4     0.48    0.12 #> 3 b_3   b          3         How much do you li… Budape…    0.45    0.42    0.13 #> # … with abbreviated variable names ¹​yvar_part_label, ²​`Not at all`"},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_lab.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix to the janitor::tabyl function to make it work seamlessly with labelled variables. — tabyl_lab","title":"Fix to the janitor::tabyl function to make it work seamlessly with labelled variables. — tabyl_lab","text":"Fix janitor::tabyl function make work seamlessly labelled variables.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_lab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix to the janitor::tabyl function to make it work seamlessly with labelled variables. — tabyl_lab","text":"","code":"tabyl_lab(dat, ..., show_na = TRUE, show_missing_levels = TRUE)"},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_lab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix to the janitor::tabyl function to make it work seamlessly with labelled variables. — tabyl_lab","text":"dat data.frame containing variables wish count. , vector want tabulate. ... arguments tabyl (just sake documentation compliance, arguments listed vector- data.frame-specific methods) show_na counts NA values displayed? one-way tabyl, presence NA values triggers additional column showing valid percentages(calculated excluding NA values). show_missing_levels counts missing levels factors displayed? rows /columns zeroes. Useful keeping consistent output dimensions even certain factor levels may present data.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_lab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix to the janitor::tabyl function to make it work seamlessly with labelled variables. — tabyl_lab","text":"Returns data.frame frequencies percentages tabulated variable(s). 3-way tabulation returns list data.frames.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_lab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix to the janitor::tabyl function to make it work seamlessly with labelled variables. — tabyl_lab","text":"","code":"tabyl_lab(mtcars, cyl) #>  cyl  n percent #>    4 11 0.34375 #>    6  7 0.21875 #>    8 14 0.43750"},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate multiple 1-way frequency tables that share the same response scale. — tabyl_multi","title":"Generate multiple 1-way frequency tables that share the same response scale. — tabyl_multi","text":"Generate multiple 1-way frequency tables share response scale.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate multiple 1-way frequency tables that share the same response scale. — tabyl_multi","text":"","code":"tabyl_multi(dat, show_na = TRUE, show_missing_levels = TRUE, var_label = NULL)"},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate multiple 1-way frequency tables that share the same response scale. — tabyl_multi","text":"dat data.frame containing variables wish count. , vector want tabulate. show_na arguments tabyl (just sake documentation compliance, arguments listed vector- data.frame-specific methods) show_missing_levels counts NA values displayed? one-way tabyl, presence NA values triggers additional column showing valid percentages(calculated excluding NA values). var_label Defaults variable name variable label, alternatively, TRUE label, FALSE name.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate multiple 1-way frequency tables that share the same response scale. — tabyl_multi","text":"Returns data.frame frequencies percentages tabulated variable(s).","code":""},{"path":"https://sda030.github.io/surveyreport/reference/tabyl_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate multiple 1-way frequency tables that share the same response scale. — tabyl_multi","text":"","code":"tabyl_multi(ex_survey1[,paste0(\"a_\", 1:9)]) #>                                                    var Yes No NA #>  a_1 - Do you consent to the following? - Agreement #1  49 39 12 #>  a_2 - Do you consent to the following? - Agreement #2  44 51  5 #>  a_3 - Do you consent to the following? - Agreement #3  43 49  8 #>  a_4 - Do you consent to the following? - Agreement #4  47 39 14 #>  a_5 - Do you consent to the following? - Agreement #5  56 34 10 #>  a_6 - Do you consent to the following? - Agreement #6  42 46 12 #>  a_7 - Do you consent to the following? - Agreement #7  45 39 16 #>  a_8 - Do you consent to the following? - Agreement #8  51 41  8 #>  a_9 - Do you consent to the following? - Agreement #9  60 31  9"},{"path":"https://sda030.github.io/surveyreport/reference/test_multiple_comb.html","id":null,"dir":"Reference","previous_headings":"","what":"Extention to the infer package for multiple testing — test_multiple_comb","title":"Extention to the infer package for multiple testing — test_multiple_comb","text":"Extention infer package multiple testing","code":""},{"path":"https://sda030.github.io/surveyreport/reference/test_multiple_comb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extention to the infer package for multiple testing — test_multiple_comb","text":"","code":"test_multiple_comb(   x,   formula = NULL,   response = NULL,   explanatory = NULL,   order = NULL,   alternative = \"two-sided\",   mu = 0,   correct = TRUE,   p = NULL,   conf_int = TRUE,   conf_level = 0.95,   test = c(\"t\", \"chisq\", \"prop\"),   success = NULL,   z = FALSE )"},{"path":"https://sda030.github.io/surveyreport/reference/test_multiple_comb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extention to the infer package for multiple testing — test_multiple_comb","text":"x data frame can coerced tibble. formula formula response variable left explanatory right. response variable name x serve response. alternative using formula argument. explanatory variable name x serve explanatory variable. order string vector specifying order levels explanatory variable ordered subtraction, order = c(\"first\", \"second\") means (\"first\" - \"second\"). alternative Character string giving direction alternative hypothesis. Options \"two-sided\" (default), \"greater\", \"less\". mu numeric value giving hypothesized null mean value one sample test hypothesized difference two sample test. correct logical indicating whether Yates' continuity correction applied possible. z = TRUE, correct argument overwritten FALSE. Otherwise defaults correct = TRUE. p numeric vector giving hypothesized null proportion success group. conf_int logical value whether include confidence interval . TRUE default. conf_level numeric value 0 1. Default value 0.95. test String indicating type test done combinations. success level response considered success, string. used testing null single proportion equals given value, two proportions equal; ignored otherwise. z logical value whether report statistic standard normal deviate Pearson's chi-square statistic. \\(z^2\\)  distributed chi-square 1 degree freedom, though note user likely need turn Yates' continuity correction setting correct = FALSE see connection.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/test_multiple_comb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extention to the infer package for multiple testing — test_multiple_comb","text":"tibble containing response-explanatory row combination columns summarizing test statistic.","code":""},{"path":"https://sda030.github.io/surveyreport/reference/test_multiple_comb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extention to the infer package for multiple testing — test_multiple_comb","text":"","code":"library(dplyr) x <- test_multiple_comb(x = mtcars,                      response = matches(\"mpg|disp|drat|hp|qsec\"),                      explanatory = matches(\"vs|am\"),                      test = \"t\") #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`. #> Warning: The statistic is based on a difference or ratio; by default, for difference-based statistics, the explanatory variable is subtracted in the order \"0\" - \"1\", or divided in the order \"0\" / \"1\" for ratio-based statistics. To specify this order yourself, supply `order = c(\"0\", \"1\")`."},{"path":"https://sda030.github.io/surveyreport/news/index.html","id":"surveyreport-010","dir":"Changelog","previous_headings":"","what":"surveyreport 0.1.0","title":"surveyreport 0.1.0","text":"Added: col_to_binaries() utility function mutating single variable multiple binary (dummy) variables, exclude one binary. Useful input report_chart_likert() wanting non-stacked chart (frequency distribution) Bugfixes","code":""},{"path":"https://sda030.github.io/surveyreport/news/index.html","id":"surveyreport-010-1","dir":"Changelog","previous_headings":"","what":"surveyreport 0.1.0","title":"surveyreport 0.1.0","text":"Added: -argument report_chart_likert(): can now make figures split background variable. Added: figure caption report_chart_likert() label_separator. Added: crosstable_to_apa() post-processing function format crosstable-object APA-standard also add caption footer N=. Better error messages report_chart_likert() multiple cols -columns. Added NEWS.md file track changes package.","code":""}]
